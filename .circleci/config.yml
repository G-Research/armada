version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  deploy-executor:
    parameters:
      worker-id:
        type: string
        default: "1"
    steps:
      - run:
          name: "Deploy to worker << parameters.worker-id >>"
          command: |
            echo $KUBECONFIG_WORKER_<< parameters.worker-id >> | base64 -d > kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            export KUBECONFIG=./kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            if timeout 15 helm list; then
              helm upgrade --install armada-executor --namespace=armada ./deployment/executor/ -f ./executor_config.yaml -f ./executor_api_credentials.yaml --set applicationConfig.application.clusterId="worker-pool-<< parameters.worker-id >>" --set image.tag="${CIRCLE_SHA1}"
            else
              echo Unable to connect to worker << parameters.worker-id >>
            fi

jobs:
  e2e:
    machine:
      enabled: true
    environment:
      GO111MODULE: "on"
    working_directory: ~/go/src/github.com/G-Research/k8s-batch
    steps:
      - checkout
      - run: e2e/setup/setup_environment.sh
      - run: env
      - run: docker run -d --expose=6379 --network=host redis
#      - run:
#          name: "run background task"
#          command: e2e/setup/background.sh
#          background: true
#      - run: timeout 30 e2e/setup/wait.sh

      - restore_cache:
          keys:
            - go-mod-machine-experiment-v2-{{ checksum "go.sum" }}

      - run:
          name: Test
          command: |
            go get -v -d ./...
            go test -v ./internal/...

      - save_cache:
          key: go-mod-machine-experiment-v2-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/go/pkg/mod"

      - run:
          name: Check formatting
          command: exit $(gofmt -l . | wc -l)

      - run:
          name: Build
          command: make build

      - store_artifacts:
          path: armadactl
          destination: armadactl

      - aws-cli/install
      - aws-cli/configure

      - run:
          name: Push Image
          command: |

            TAG=${CIRCLE_SHA1}

            if [ ${CIRCLE_BRANCH} != master ]
              then
                TAG=branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            fi

            source scripts/assume-role.sh
            $(aws ecr get-login --region eu-west-1 --no-include-email)

            docker tag armada ${ECR_REPOSITORY}/armada:${TAG}
            docker push ${ECR_REPOSITORY}/armada:${TAG}

            docker tag armada-executor ${ECR_REPOSITORY}/armada-executor:${TAG}
            docker push ${ECR_REPOSITORY}/armada-executor:${TAG}


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - e2e:
          filters:
            branches:
              ignore: master
