version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  e2e:
    machine:
      enabled: true
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: Load relevant docker images
          command: |
            source scripts/assume-role.sh
            $(aws ecr get-login --region eu-west-1 --no-include-email)
            docker pull ${ECR_REPOSITORY}/armada:b91e651cba4ed065cbbbea5bf43ef688b40bd766
            docker pull ${ECR_REPOSITORY}/armada-executor:b91e651cba4ed065cbbbea5bf43ef688b40bd766
            docker images
      - run: test/end_to_end/setup/setup_environment.sh
      - run: test/end_to_end/setup/setup_clusters.sh
      - run: docker run -d --expose=6379 redis
      - run: docker run -d --expose=50051 ${ECR_REPOSITORY}/armada:b91e651cba4ed065cbbbea5bf43ef688b40bd766
      - run:
          name: "Install executor on Kind"
          command: |
            export KUBECONFIG=$(kind get kubeconfig-path --name=cluster1)
            
            helm init --wait
            kubectl create serviceaccount --namespace kube-system tiller
            kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
            kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'

            echo $EXECUTOR_E2E_CONFIG | base64 -d > executor_config.yaml
            helm install ./deployment/executor -f ./executor_config --set applicationConfig.application.clusterId="worker-1" --set image.tag="b91e651cba4ed065cbbbea5bf43ef688b40bd766"
#      - run:
#          name: Run e2e tests

workflows:
  version: 2
  build-and-test:
    jobs:
      - e2e