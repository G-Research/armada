version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  deploy-executor:
    parameters:
      worker-id:
        type: string
        default: "1"
    steps:
      - run:
          name: "Deploy to worker << parameters.worker-id >>"
          command: |
            echo $KUBECONFIG_WORKER_<< parameters.worker-id >> | base64 -d > kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            export KUBECONFIG=./kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            if timeout 15 helm list; then
              helm upgrade --install armada-executor --namespace=armada ./deployment/executor/ -f ./executor_config.yaml -f ./executor_api_credentials.yaml --set applicationConfig.application.clusterId="worker-pool-<< parameters.worker-id >>" --set image.tag="${CIRCLE_SHA1}"
            else
              echo Unable to connect to worker << parameters.worker-id >>
            fi

jobs:
  e2e:
    machine:
      enabled: true
      environment:
        GO111MODULE: "on"
    working_directory: ~/go/src/github.com/G-Research/k8s-batch
    steps:
      - checkout
      - run: echo ${GO111MODULE}
      - run:
          name: "run background task"
          command: e2e/setup/background.sh
          background: true
      - run: timeout 30 e2e/setup/wait.sh

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: Load relevant docker images
          command: |
            source scripts/assume-role.sh
            $(aws ecr get-login --region eu-west-1 --no-include-email)
            docker pull alpine:3.10
            docker pull ${ECR_REPOSITORY}/armada:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            docker pull ${ECR_REPOSITORY}/armada-executor:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            docker images
      - run: e2e/setup/setup_environment.sh
      - run: e2e/setup/setup_clusters.sh
      - run: docker run -d --expose=6379 --network=host redis
      - run: docker run -d --expose=50051 --network=host ${ECR_REPOSITORY}/armada:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
      - run: docker run -d --network=host -v $(kind get kubeconfig-path --name="cluster1"):/kube/config -e KUBECONFIG=/kube/config ${ECR_REPOSITORY}/armada-executor:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
      - run:
          name: Run e2e tests
          command: |
            go test -v ./e2e/test/...


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - e2e:
          filters:
            branches:
              ignore: master
