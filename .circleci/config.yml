version: 2.1

commands:
  deploy-executor:
    parameters:
      worker-id:
        type: string
        default: "1"
    steps:
      - run:
          name: "Deploy to worker << parameters.worker-id >>"
          command: |
            echo $KUBECONFIG_WORKER_<< parameters.worker-id >> | base64 -d > kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            export KUBECONFIG=./kubeconfig_worker_<< parameters.worker-id >>_decoded.yaml
            if timeout 15 helm list; then
              helm upgrade --install armada-executor --namespace=armada ./deployment/executor/ -f ./executor_config.yaml -f ./executor_api_credentials.yaml --set applicationConfig.application.clusterId="worker-pool-<< parameters.worker-id >>" --set image.tag="${CIRCLE_SHA1}"
            else
              echo Unable to connect to worker << parameters.worker-id >>
            fi

jobs:
  build:
    docker:
      - image: circleci/golang:1.12.6
        environment:
          GO111MODULE: "on"

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: redis

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/G-Research/k8s-batch
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

      - run:
          name: Test
          command: |
            go get -v -d ./...
            go test -v ./internal/...

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Check formatting
          command: |
          go get golang.org/x/tools/cmd/goimports
          goimports -h
          exit $(gofmt -l . | wc -l)

      - run:
          name: Build
          command: make build

      - store_artifacts:
          path: armadactl
          destination: armadactl
      - run:
          name: Push Image
          command: |

            TAG=${CIRCLE_SHA1}

            if [ ${CIRCLE_BRANCH} != master ]
              then
                TAG=branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            fi

            echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USER} --password-stdin

            docker tag armada gresearchdev/armada-server-dev:${TAG}
            docker push gresearchdev/armada-server-dev:${TAG}

            docker tag armada-executor gresearchdev/armada-executor-dev:${TAG}
            docker push gresearchdev/armada-executor-dev:${TAG}
  e2e:
    machine:
      docker_layer_caching: true
    environment:
      GO111MODULE: "on"
      GOPATH: "/home/circleci/go"
      GOCACHE: "/home/circleci/go/cache"
    working_directory: ~/go/src/github.com/G-Research/k8s-batch
    steps:
      - checkout
      - run:
          name: Load relevant docker images
          command: |
            docker pull alpine:3.10
            docker pull gresearchdev/armada-server-dev:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            docker pull gresearchdev/armada-executor-dev:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
      - run: e2e/setup/setup_environment.sh
      - run: e2e/setup/setup_cluster_ci.sh
      - run: e2e/setup/setup_kube_config_ci.sh
      - run: docker run -d --expose=6379 --network=host redis
      - run: docker run -d --expose=50051 --network=host gresearchdev/armada-server-dev:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
      - run: docker run -d --network=host -v ~/.kube/config:/kube/config -e KUBECONFIG=/kube/config gresearchdev/armada-executor-dev:branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1}
      - restore_cache:
          keys:
            - machine-go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Get dependencies
          command: |
            go get -d ./...
      - run:
          name: Run e2e tests
          command: |
            INTEGRATION_ENABLED=true go test ./e2e/test/... -count=1
      - save_cache:
          key: machine-go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/go/pkg/mod"
            - "/home/circleci/go/cache"
  deploy:
    docker:
      - image: alpine/helm:2.13.1
    working_directory: /go/src/github.com/G-Research/k8s-batch
    steps:
      - checkout
      - run:
          name: "Extract config files from environment variables"
          command: |
            echo $ARMADA_CONFIG | base64 -d > armada_config.yaml
            echo $ARMADA_USERS | base64 -d > armada_users.yaml
            echo $EXECUTOR_CONFIG | base64 -d > executor_config.yaml
            echo $EXECUTOR_API_CREDENTIALS | base64 -d > executor_api_credentials.yaml
      - run:
          name: "Deploy to services"
          command: |
            echo $KUBECONFIG_SERVICES | base64 -d > kubeconfig_services_decoded.yaml
            export KUBECONFIG=./kubeconfig_services_decoded.yaml
            if timeout 15 helm list; then
              helm upgrade --install armada --namespace=armada ./deployment/armada/ -f ./armada_config.yaml -f ./armada_users.yaml --set image.tag="${CIRCLE_SHA1}"
            else
              echo Unable to connect to services cluster
            fi
      - deploy-executor:
          worker-id: "1"
      - deploy-executor:
          worker-id: "2"
      - deploy-executor:
          worker-id: "3"
      - deploy-executor:
          worker-id: "4"
      - deploy-executor:
          worker-id: "5"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - e2e:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
