version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  e2e:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: Load relevant docker images
          command: |
            source scripts/assume-role.sh
            $(aws ecr get-login --region eu-west-1 --no-include-email)
            docker pull alpine:3.10
            docker pull ${ECR_REPOSITORY}/armada:cbb026d82f2776fd1423b19448dcac002242ce52
            docker pull ${ECR_REPOSITORY}/armada-executor:cbb026d82f2776fd1423b19448dcac002242ce52
            docker images
      - run: e2e/setup/setup_environment.sh
      - run: e2e/setup/setup_clusters.sh
      - run: docker run -d --expose=6379 --network=host redis
      - run: docker run -d --expose=50051 --network=host ${ECR_REPOSITORY}/armada:cbb026d82f2776fd1423b19448dcac002242ce52
      - run: docker run -d --network=host -v $(kind get kubeconfig-path --name="cluster1"):/kube/config -e KUBECONFIG=/kube/config ${ECR_REPOSITORY}/armada-executor:cbb026d82f2776fd1423b19448dcac002242ce52
      - run:
          name: Run e2e tests
          command: |
            INTEGRATION_ENABLED=true go test -v ./e2e/test/...

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - e2e:
          filters:
            branches:
              ignore: master
