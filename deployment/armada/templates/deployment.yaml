apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "armada.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "armada.labels.all" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
{{ include "armada.labels.identity" . | indent 6 }}
{{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
{{- end }}
  template:
    metadata:
      name: {{ include "armada.name" . }}
      labels:
{{ include "armada.labels.all" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "armada.name" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
      containers:
        - name: armada
          imagePullPolicy: IfNotPresent
          image: {{ .Values.image.repository }}:{{ required "A value is required for .Values.image.tag" .Values.image.tag }}
          args:
            - --config
            - /config/application_config.yaml
{{- if .Values.env }}
          env:
{{ toYaml .Values.env | indent 12 }}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - containerPort:  {{ .Values.applicationConfig.grpcPort }}
              protocol: TCP
              name: grpc
            - containerPort: 9000
              protocol: TCP
              name: metrics
          volumeMounts:
            - name: user-config
              mountPath: /config/application_config.yaml
              subPath: {{ include "armada.config.filename" . }}
              readOnly: true
{{- if .Values.additionalVolumeMounts }}
{{ toYaml .Values.additionalVolumeMounts | indent 12 }}
{{- end }}
          securityContext:
            allowPrivilegeEscalation: false
          readinessProbe:
            httpGet:
              host: localhost
              path: /health
              port: rest
            initialDelaySeconds: 5
            timeoutSeconds: 5
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ include "armada.name" . }}
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: user-config
          secret:
            secretName: {{ include "armada.config.name" . }}
{{- if .Values.additionalVolumes }}
{{ toYaml .Values.additionalVolumes | indent 8 }}
{{- end }}